name: CI/CD & PR Preview Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, reopened, synchronize, closed, labeled, unlabeled]
  pull_request_target:
    types: [opened, reopened, synchronize, labeled, unlabeled]
  workflow_dispatch:

env:
  NODE_VERSION: "20"

jobs:
  # ============================================================
  # 🔹 Code Quality & Build (Single build)
  # ============================================================
  ci:
    name: Code Quality & Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      # ---------------------------------------------
      # Checkout code
      # ---------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------------
      # Setup Node.js and cache dependencies
      # ---------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # ---------------------------------------------
      # Install, lint, type check, and build
      # ---------------------------------------------
      - name: Install dependencies
        run: npm ci --frozen-lockfile

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting (Prettier)
        run: npm run format:check

      - name: TypeScript type check
        run: npm run type-check

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          if [ -d ".next" ]; then
            echo "✅ Build successful - .next directory created"
            du -sh .next/
            [ -f ".next/build-manifest.json" ] && echo "✅ Build manifest exists"
          else
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi

      - name: Run tests (if available)
        run: npm test

      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      # ---------------------------------------------
      # Upload build artifacts for Docker packaging
      # ---------------------------------------------

    - name: Upload build artifacts
    if: success()
    uses: actions/upload-artifact@v4
    with:
        name: build-artifacts-${{ github.event.pull_request.head.sha }}
        path: |
        .next/**
        public/**
        package.json
        package-lock.json
        next.config.js
        next.config.ts
        retention-days: 7
    
  # ============================================================
  # 🔹 Build & Push PR Preview Image (No rebuild)
  # ============================================================
  build-preview:
    name: Build & Push PR Preview Image
    runs-on: ubuntu-latest
    needs: [ci]
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Verify ok-to-test label
        id: verify_label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const hasLabel = labels.data.some(l => l.name === 'ok-to-test');
            core.setOutput('ok', hasLabel);
      - name: Checkout PR branch
        if: steps.verify_label.outputs.ok == 'true'
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/head

      - name: Download last successful build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.event.pull_request.head.sha }}
          path: .

      - name: Inspect artifact contents
        run: |
          echo "Downloaded artifact structure:"
          ls -R | head -n 100

      - name: Move artifact files if nested
        run: |
          if [ -d build-artifacts-* ]; then
          echo "Flattening artifact directory..."
          mv build-artifacts-*/* .
          fi
          [ -d ".next" ] || (echo "❌ .next still missing after flattening" && exit 1)
        
      - name: Validate prebuilt assets
        run: |
          [ -d ".next" ] || (echo "❌ Missing .next directory — build artifacts not found" && exit 1)
          echo "✅ Found prebuilt .next directory, proceeding with Docker packaging"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Oracle Cloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: iad.ocir.io
          username: ${{ secrets.OCI_USERNAME }}
          password: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: iad.ocir.io/id4wyucbsggm/kubestellar-docs-prs:pr-${{ github.event.pull_request.number }}
          provenance: false

      - name: Comment PR with preview info
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🧩 **Preview image built and pushed to OCIR**
            ```
            iad.ocir.io/id4wyucbsggm/kubestellar-docs-prs:pr-${{ github.event.pull_request.number }}
            ```
            🌐 **Live Preview:**
            [http://pr-${{ github.event.pull_request.number }}.previews.kubestellar.io](http://pr-${{ github.event.pull_request.number }}.previews.kubestellar.io)

  # ============================================================
  # 🧹 Cleanup on PR close
  # ============================================================
  cleanup:
    name: Cleanup PR Preview Image
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Install OCI CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip
          pip install oci-cli

      - name: Configure OCI CLI
        env:
          OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
          OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
          OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
          OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
          OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
        run: |
          mkdir -p ~/.oci
          echo "$OCI_CLI_KEY_CONTENT" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          cat <<EOF > ~/.oci/config
          [DEFAULT]
          user=${OCI_CLI_USER}
          fingerprint=${OCI_CLI_FINGERPRINT}
          key_file=~/.oci/oci_api_key.pem
          tenancy=${OCI_CLI_TENANCY}
          region=${OCI_CLI_REGION}
          EOF

      - name: Delete PR image from OCIR
        run: |
          echo "Searching for image: pr-${{ github.event.number }}"
          IMAGE_IDS=$(oci artifacts container image list \
            --repository-name "kubestellar-docs-prs" \
            --compartment-id "${{ secrets.OCI_CLI_TENANCY }}" \
            --query 'data[?contains(`"display-name"`, `pr-${{ github.event.number }}`)].id' \
            --raw-output)
          if [ -z "$IMAGE_IDS" ]; then
            echo "No image found for PR #${{ github.event.number }}"
          else
            for IMAGE_ID in $IMAGE_IDS; do
              echo "Deleting image: $IMAGE_ID"
              oci artifacts container image delete --image-id "$IMAGE_ID" --force
            done
          fi

      - name: Comment PR cleanup
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.number }}
          body: |
            🧹 **Deleted preview image from OCIR**
            ```
            iad.ocir.io/id4wyucbsggm/kubestellar-docs-prs:pr-${{ github.event.number }}
            ```
            📴 **Preview URL Removed**
            http://pr-${{ github.event.number }}.previews.kubestellar.io
